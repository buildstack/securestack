###  Created by Paul McCarty <paulm@securestack.com.au> 25-10-2017 ###
###  Suggested way to run this playbook: ### 
###  ap ./launch_securestack_ami.yml -e "local_net=172.31.0.0/20 ossec_server_ip=10.0.0.250 authd_password=P@sswerd hostname=webserver-prod01" ###

---

- name: Launch a new SecureStack server from the golden image AMI
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - launch_vars.yml

  tasks:

    - name: Launch ec2 instance
      ec2:
         key_name: "{{ key_name }}"
         instance_type: "{{ instance_type }}"
         #instance_profile_name: "{{ instance_profile_name }}"
         image: "{{ image }}"
         count: "{{ count }}"
         wait: true
         region: "{{ region }}"
         group_id: "{{ group_id }}"
         vpc_subnet_id: "{{ vpc_subnet_id }}"
         instance_tags:
           Name: "{{ hostname }}"
           securestack_managed: yes
         assign_public_ip: no
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.private_ip }}"
        groupname: launched
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      wait_for:
        #host: "{{ item.public_dns_name }}"
        host: "{{ item.private_ip }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items: "{{ ec2.instances }}"

- name: Configure securestack user and basic security
  hosts: launched
  remote_user: "{{ remote_user }}"
  become: True
  gather_facts: True
  vars_files:
    - launch_vars.yml

  pre_tasks:
    - name: Change hostname
      hostname:
        name: "{{ hostname }}"

    - name: Yum updates
      yum:
        name: '*'
        enablerepo: base,epel,extras,updates
        state: latest
      when: ansible_os_family == "RedHat"

    - name: Run securestack update script
      shell: /opt/securestack/scripts/securestack autoupdate

    - name: Run securestack update script #2
      shell: /opt/securestack/scripts/securestack autoupdate

  roles:
    - { role: 'securestack-ossec-agent', gather_facts: True, become: True, when: securestack_role != 'server' }
